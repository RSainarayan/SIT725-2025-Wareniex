<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Stock Intake</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="" crossorigin="anonymous">
  </head>
  <body>
    <div class="container py-4">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3">Stock Intake</h1>
        <div>
          <a href="/dashboard" class="btn btn-outline-secondary me-2">Home</a>
          <a href="/stock-intake/new" class="btn btn-primary me-2">New intake</a>
          <a href="/stock-intake/export/pdf" class="btn btn-warning me-2">Download PDF</a>
        </div>
      </div>

      <!-- Low Stock Alert Section -->
      <div id="low-stock-alerts"></div>

      <% if (intakes && intakes.length) { %>
        <div class="table-responsive">
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Total Weight (kg)</th>
                <th>Unit Weight (kg)</th>
                <th>Received At</th>
                <th></th>
              </tr>
            </thead>
            <tbody>
              <% intakes.forEach(function(i) { %>
                <tr>
                  <td><%= i.product ? i.product.name : 'Unknown product' %></td>
                  <td><%= i.quantity %></td>
                  <td><%= i.totalWeight %></td>
                  <td><%= i.singleWeight %></td>
                  <td><%= new Date(i.receivedAt).toLocaleString() %></td>
                  <td>
                    <img src="/stock-intake/<%= i._id %>/barcode" alt="Barcode" style="height:40px;" />
                  </td>
                  <td>
                    <div class="btn-group" role="group">
                      <a href="/stock-intake/<%= i._id %>/edit" class="btn btn-sm btn-outline-primary">Edit</a>
                      <form action="/stock-intake/<%= i._id %>/delete" method="post" style="display: inline;" onsubmit="return confirm('Delete this intake?')">
                        <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                      </form>
                    </div>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      <% } else { %>
        <div class="alert alert-secondary">No intake records</div>
      <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
    
    <script>
      // Load low stock alerts
      async function loadLowStockAlerts() {
        try {
          const resp = await fetch('/stock-intake/data/low-stock/products');
          const data = await resp.json();
          
          const alertsContainer = document.getElementById('low-stock-alerts');
          
          if (data.products && data.products.length > 0) {
            let alertHTML = `
              <div class="alert alert-warning alert-dismissible fade show mb-4" role="alert">
                <h5 class="alert-heading"><i class="bi bi-exclamation-triangle"></i> Low Stock Alert!</h5>
                <p>The following products are below their minimum stock threshold:</p>
                <ul class="mb-2">
            `;
            
            data.products.forEach(product => {
              alertHTML += `<li><strong>${product.name}</strong> (SKU: ${product.sku}) - Current: ${product.quantity}, Minimum: ${product.minStockLevel}</li>`;
            });
            
            alertHTML += `
                </ul>
                <hr>
                <p class="mb-0">Consider restocking these items soon to avoid inventory shortages.</p>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
              </div>
            `;
            
            alertsContainer.innerHTML = alertHTML;
          } else {
            alertsContainer.innerHTML = '';
          }
        } catch (e) {
          console.error('Failed to load low stock alerts:', e);
        }
      }
      
      // Load alerts on page load
      loadLowStockAlerts();
      
      // Set up Socket.io for real-time updates
      const socket = io();
      socket.on('lowStockAlert', function(data) {
        loadLowStockAlerts();
      });
      socket.on('stockIntakeCreated', function(intake) {
        loadLowStockAlerts();
      });
    </script>
  </body>
</html>
